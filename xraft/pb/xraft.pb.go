// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v4.23.4
// source: xraft.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Command struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Op  uint32 `protobuf:"varint,1,opt,name=Op,proto3" json:"Op,omitempty"`
	Key string `protobuf:"bytes,2,opt,name=Key,proto3" json:"Key,omitempty"`
	Val string `protobuf:"bytes,3,opt,name=Val,proto3" json:"Val,omitempty"`
}

func (x *Command) Reset() {
	*x = Command{}
	if protoimpl.UnsafeEnabled {
		mi := &file_xraft_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Command) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Command) ProtoMessage() {}

func (x *Command) ProtoReflect() protoreflect.Message {
	mi := &file_xraft_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Command.ProtoReflect.Descriptor instead.
func (*Command) Descriptor() ([]byte, []int) {
	return file_xraft_proto_rawDescGZIP(), []int{0}
}

func (x *Command) GetOp() uint32 {
	if x != nil {
		return x.Op
	}
	return 0
}

func (x *Command) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *Command) GetVal() string {
	if x != nil {
		return x.Val
	}
	return ""
}

type RequestID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SeqId    uint64 `protobuf:"varint,1,opt,name=SeqId,proto3" json:"SeqId,omitempty"`
	ClientID uint64 `protobuf:"varint,2,opt,name=clientID,proto3" json:"clientID,omitempty"`
}

func (x *RequestID) Reset() {
	*x = RequestID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_xraft_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestID) ProtoMessage() {}

func (x *RequestID) ProtoReflect() protoreflect.Message {
	mi := &file_xraft_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestID.ProtoReflect.Descriptor instead.
func (*RequestID) Descriptor() ([]byte, []int) {
	return file_xraft_proto_rawDescGZIP(), []int{1}
}

func (x *RequestID) GetSeqId() uint64 {
	if x != nil {
		return x.SeqId
	}
	return 0
}

func (x *RequestID) GetClientID() uint64 {
	if x != nil {
		return x.ClientID
	}
	return 0
}

// this is a comment
type Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SeqId    uint64   `protobuf:"varint,1,opt,name=SeqId,proto3" json:"SeqId,omitempty"`
	ClientID uint64   `protobuf:"varint,2,opt,name=clientID,proto3" json:"clientID,omitempty"`
	ReqOp    uint32   `protobuf:"varint,3,opt,name=ReqOp,proto3" json:"ReqOp,omitempty"`
	Command  *Command `protobuf:"bytes,4,opt,name=Command,proto3" json:"Command,omitempty"`
}

func (x *Request) Reset() {
	*x = Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_xraft_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Request) ProtoMessage() {}

func (x *Request) ProtoReflect() protoreflect.Message {
	mi := &file_xraft_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Request.ProtoReflect.Descriptor instead.
func (*Request) Descriptor() ([]byte, []int) {
	return file_xraft_proto_rawDescGZIP(), []int{2}
}

func (x *Request) GetSeqId() uint64 {
	if x != nil {
		return x.SeqId
	}
	return 0
}

func (x *Request) GetClientID() uint64 {
	if x != nil {
		return x.ClientID
	}
	return 0
}

func (x *Request) GetReqOp() uint32 {
	if x != nil {
		return x.ReqOp
	}
	return 0
}

func (x *Request) GetCommand() *Command {
	if x != nil {
		return x.Command
	}
	return nil
}

type RequestReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReqReply     uint32       `protobuf:"varint,1,opt,name=ReqReply,proto3" json:"ReqReply,omitempty"`
	Val          string       `protobuf:"bytes,2,opt,name=Val,proto3" json:"Val,omitempty"`
	OpReply      uint32       `protobuf:"varint,3,opt,name=OpReply,proto3" json:"OpReply,omitempty"`
	Fterm        uint32       `protobuf:"varint,4,opt,name=Fterm,proto3" json:"Fterm,omitempty"`
	ConflictReqs []*RequestID `protobuf:"bytes,5,rep,name=conflict_reqs,json=conflictReqs,proto3" json:"conflict_reqs,omitempty"`
}

func (x *RequestReply) Reset() {
	*x = RequestReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_xraft_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestReply) ProtoMessage() {}

func (x *RequestReply) ProtoReflect() protoreflect.Message {
	mi := &file_xraft_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestReply.ProtoReflect.Descriptor instead.
func (*RequestReply) Descriptor() ([]byte, []int) {
	return file_xraft_proto_rawDescGZIP(), []int{3}
}

func (x *RequestReply) GetReqReply() uint32 {
	if x != nil {
		return x.ReqReply
	}
	return 0
}

func (x *RequestReply) GetVal() string {
	if x != nil {
		return x.Val
	}
	return ""
}

func (x *RequestReply) GetOpReply() uint32 {
	if x != nil {
		return x.OpReply
	}
	return 0
}

func (x *RequestReply) GetFterm() uint32 {
	if x != nil {
		return x.Fterm
	}
	return 0
}

func (x *RequestReply) GetConflictReqs() []*RequestID {
	if x != nil {
		return x.ConflictReqs
	}
	return nil
}

type Message struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientID  uint64   `protobuf:"varint,1,opt,name=clientID,proto3" json:"clientID,omitempty"`
	MSeqId    uint64   `protobuf:"varint,2,opt,name=mSeqId,proto3" json:"mSeqId,omitempty"`
	Request   *Request `protobuf:"bytes,3,opt,name=Request,proto3" json:"Request,omitempty"`
	CommitCmd uint64   `protobuf:"varint,4,opt,name=Commit_cmd,json=CommitCmd,proto3" json:"Commit_cmd,omitempty"`
}

func (x *Message) Reset() {
	*x = Message{}
	if protoimpl.UnsafeEnabled {
		mi := &file_xraft_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message) ProtoMessage() {}

func (x *Message) ProtoReflect() protoreflect.Message {
	mi := &file_xraft_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message.ProtoReflect.Descriptor instead.
func (*Message) Descriptor() ([]byte, []int) {
	return file_xraft_proto_rawDescGZIP(), []int{4}
}

func (x *Message) GetClientID() uint64 {
	if x != nil {
		return x.ClientID
	}
	return 0
}

func (x *Message) GetMSeqId() uint64 {
	if x != nil {
		return x.MSeqId
	}
	return 0
}

func (x *Message) GetRequest() *Request {
	if x != nil {
		return x.Request
	}
	return nil
}

func (x *Message) GetCommitCmd() uint64 {
	if x != nil {
		return x.CommitCmd
	}
	return 0
}

// First Batched Fast cmd
type FBFCmd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FTerm uint32     `protobuf:"varint,1,opt,name=FTerm,proto3" json:"FTerm,omitempty"`
	Cmds  []*Request `protobuf:"bytes,2,rep,name=cmds,proto3" json:"cmds,omitempty"`
	// the last raft cmd before change to fast
	ClientID uint64 `protobuf:"varint,3,opt,name=clientID,proto3" json:"clientID,omitempty"`
	SeqId    uint64 `protobuf:"varint,4,opt,name=SeqId,proto3" json:"SeqId,omitempty"`
}

func (x *FBFCmd) Reset() {
	*x = FBFCmd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_xraft_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FBFCmd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FBFCmd) ProtoMessage() {}

func (x *FBFCmd) ProtoReflect() protoreflect.Message {
	mi := &file_xraft_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FBFCmd.ProtoReflect.Descriptor instead.
func (*FBFCmd) Descriptor() ([]byte, []int) {
	return file_xraft_proto_rawDescGZIP(), []int{5}
}

func (x *FBFCmd) GetFTerm() uint32 {
	if x != nil {
		return x.FTerm
	}
	return 0
}

func (x *FBFCmd) GetCmds() []*Request {
	if x != nil {
		return x.Cmds
	}
	return nil
}

func (x *FBFCmd) GetClientID() uint64 {
	if x != nil {
		return x.ClientID
	}
	return 0
}

func (x *FBFCmd) GetSeqId() uint64 {
	if x != nil {
		return x.SeqId
	}
	return 0
}

type MessageReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MSeqId uint64        `protobuf:"varint,1,opt,name=mSeqId,proto3" json:"mSeqId,omitempty"`
	Leader uint32        `protobuf:"varint,2,opt,name=Leader,proto3" json:"Leader,omitempty"`
	RR     *RequestReply `protobuf:"bytes,3,opt,name=RR,proto3" json:"RR,omitempty"`
}

func (x *MessageReply) Reset() {
	*x = MessageReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_xraft_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageReply) ProtoMessage() {}

func (x *MessageReply) ProtoReflect() protoreflect.Message {
	mi := &file_xraft_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageReply.ProtoReflect.Descriptor instead.
func (*MessageReply) Descriptor() ([]byte, []int) {
	return file_xraft_proto_rawDescGZIP(), []int{6}
}

func (x *MessageReply) GetMSeqId() uint64 {
	if x != nil {
		return x.MSeqId
	}
	return 0
}

func (x *MessageReply) GetLeader() uint32 {
	if x != nil {
		return x.Leader
	}
	return 0
}

func (x *MessageReply) GetRR() *RequestReply {
	if x != nil {
		return x.RR
	}
	return nil
}

type AbortReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FTerm uint32     `protobuf:"varint,1,opt,name=FTerm,proto3" json:"FTerm,omitempty"`
	ReqID *RequestID `protobuf:"bytes,2,opt,name=reqID,proto3" json:"reqID,omitempty"`
}

func (x *AbortReq) Reset() {
	*x = AbortReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_xraft_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AbortReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AbortReq) ProtoMessage() {}

func (x *AbortReq) ProtoReflect() protoreflect.Message {
	mi := &file_xraft_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AbortReq.ProtoReflect.Descriptor instead.
func (*AbortReq) Descriptor() ([]byte, []int) {
	return file_xraft_proto_rawDescGZIP(), []int{7}
}

func (x *AbortReq) GetFTerm() uint32 {
	if x != nil {
		return x.FTerm
	}
	return 0
}

func (x *AbortReq) GetReqID() *RequestID {
	if x != nil {
		return x.ReqID
	}
	return nil
}

type PingText struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PingText) Reset() {
	*x = PingText{}
	if protoimpl.UnsafeEnabled {
		mi := &file_xraft_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PingText) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingText) ProtoMessage() {}

func (x *PingText) ProtoReflect() protoreflect.Message {
	mi := &file_xraft_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingText.ProtoReflect.Descriptor instead.
func (*PingText) Descriptor() ([]byte, []int) {
	return file_xraft_proto_rawDescGZIP(), []int{8}
}

var File_xraft_proto protoreflect.FileDescriptor

var file_xraft_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x78, 0x72, 0x61, 0x66, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02, 0x70,
	0x62, 0x22, 0x3d, 0x0a, 0x07, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x0e, 0x0a, 0x02,
	0x4f, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x4f, 0x70, 0x12, 0x10, 0x0a, 0x03,
	0x4b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x4b, 0x65, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x56, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x56, 0x61, 0x6c,
	0x22, 0x3d, 0x0a, 0x09, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x12, 0x14, 0x0a,
	0x05, 0x53, 0x65, 0x71, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x53, 0x65,
	0x71, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x22,
	0x78, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x53, 0x65,
	0x71, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x53, 0x65, 0x71, 0x49, 0x64,
	0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05,
	0x52, 0x65, 0x71, 0x4f, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x52, 0x65, 0x71,
	0x4f, 0x70, 0x12, 0x25, 0x0a, 0x07, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64,
	0x52, 0x07, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x22, 0xa0, 0x01, 0x0a, 0x0c, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x52, 0x65,
	0x71, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x52, 0x65,
	0x71, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x56, 0x61, 0x6c, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x56, 0x61, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x4f, 0x70, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x4f, 0x70, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x46, 0x74, 0x65, 0x72, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x05, 0x46, 0x74, 0x65, 0x72, 0x6d, 0x12, 0x32, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x66,
	0x6c, 0x69, 0x63, 0x74, 0x5f, 0x72, 0x65, 0x71, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0d, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x52, 0x0c,
	0x63, 0x6f, 0x6e, 0x66, 0x6c, 0x69, 0x63, 0x74, 0x52, 0x65, 0x71, 0x73, 0x22, 0x83, 0x01, 0x0a,
	0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x53, 0x65, 0x71, 0x49, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x6d, 0x53, 0x65, 0x71, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x07,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e,
	0x70, 0x62, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x07, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x5f, 0x63, 0x6d,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x43,
	0x6d, 0x64, 0x22, 0x71, 0x0a, 0x06, 0x46, 0x42, 0x46, 0x43, 0x6d, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x46, 0x54, 0x65, 0x72, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x46, 0x54, 0x65,
	0x72, 0x6d, 0x12, 0x1f, 0x0a, 0x04, 0x63, 0x6d, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0b, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x04, 0x63,
	0x6d, 0x64, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x12,
	0x14, 0x0a, 0x05, 0x53, 0x65, 0x71, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05,
	0x53, 0x65, 0x71, 0x49, 0x64, 0x22, 0x60, 0x0a, 0x0c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x53, 0x65, 0x71, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x6d, 0x53, 0x65, 0x71, 0x49, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x4c,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x20, 0x0a, 0x02, 0x52, 0x52, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x10, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x52, 0x02, 0x52, 0x52, 0x22, 0x45, 0x0a, 0x08, 0x41, 0x62, 0x6f, 0x72, 0x74,
	0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x46, 0x54, 0x65, 0x72, 0x6d, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x05, 0x46, 0x54, 0x65, 0x72, 0x6d, 0x12, 0x23, 0x0a, 0x05, 0x72, 0x65, 0x71,
	0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x52, 0x05, 0x72, 0x65, 0x71, 0x49, 0x44, 0x22, 0x0b,
	0x0a, 0x09, 0x70, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x32, 0xbf, 0x01, 0x0a, 0x0b,
	0x78, 0x52, 0x61, 0x66, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x2d, 0x0a, 0x0c, 0x50,
	0x72, 0x6f, 0x70, 0x6f, 0x73, 0x65, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x12, 0x0b, 0x2e, 0x70, 0x62,
	0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x10, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x2f, 0x0a, 0x0d, 0x41, 0x62,
	0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x12, 0x0c, 0x2e, 0x70, 0x62,
	0x2e, 0x41, 0x62, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x10, 0x2e, 0x70, 0x62, 0x2e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x29, 0x0a, 0x09, 0x53,
	0x74, 0x61, 0x72, 0x74, 0x46, 0x61, 0x73, 0x74, 0x12, 0x0a, 0x2e, 0x70, 0x62, 0x2e, 0x46, 0x42,
	0x46, 0x43, 0x6d, 0x64, 0x1a, 0x10, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x25, 0x0a, 0x04, 0x70, 0x69, 0x6e, 0x67, 0x12, 0x0b,
	0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x10, 0x2e, 0x70, 0x62,
	0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x42, 0x23, 0x5a,
	0x21, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2f, 0x46, 0x69, 0x73, 0x63, 0x68, 0x65, 0x72, 0x30,
	0x35, 0x32, 0x32, 0x2f, 0x78, 0x72, 0x61, 0x66, 0x74, 0x2f, 0x78, 0x72, 0x61, 0x66, 0x74, 0x2f,
	0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_xraft_proto_rawDescOnce sync.Once
	file_xraft_proto_rawDescData = file_xraft_proto_rawDesc
)

func file_xraft_proto_rawDescGZIP() []byte {
	file_xraft_proto_rawDescOnce.Do(func() {
		file_xraft_proto_rawDescData = protoimpl.X.CompressGZIP(file_xraft_proto_rawDescData)
	})
	return file_xraft_proto_rawDescData
}

var file_xraft_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_xraft_proto_goTypes = []interface{}{
	(*Command)(nil),      // 0: pb.Command
	(*RequestID)(nil),    // 1: pb.RequestID
	(*Request)(nil),      // 2: pb.Request
	(*RequestReply)(nil), // 3: pb.RequestReply
	(*Message)(nil),      // 4: pb.Message
	(*FBFCmd)(nil),       // 5: pb.FBFCmd
	(*MessageReply)(nil), // 6: pb.MessageReply
	(*AbortReq)(nil),     // 7: pb.AbortReq
	(*PingText)(nil),     // 8: pb.ping_text
}
var file_xraft_proto_depIdxs = []int32{
	0,  // 0: pb.Request.Command:type_name -> pb.Command
	1,  // 1: pb.RequestReply.conflict_reqs:type_name -> pb.RequestID
	2,  // 2: pb.Message.Request:type_name -> pb.Request
	2,  // 3: pb.FBFCmd.cmds:type_name -> pb.Request
	3,  // 4: pb.MessageReply.RR:type_name -> pb.RequestReply
	1,  // 5: pb.AbortReq.reqID:type_name -> pb.RequestID
	4,  // 6: pb.xRaftServer.Propose_grpc:input_type -> pb.Message
	7,  // 7: pb.xRaftServer.AbortReq_grpc:input_type -> pb.AbortReq
	5,  // 8: pb.xRaftServer.StartFast:input_type -> pb.FBFCmd
	4,  // 9: pb.xRaftServer.ping:input_type -> pb.Message
	6,  // 10: pb.xRaftServer.Propose_grpc:output_type -> pb.MessageReply
	3,  // 11: pb.xRaftServer.AbortReq_grpc:output_type -> pb.RequestReply
	6,  // 12: pb.xRaftServer.StartFast:output_type -> pb.MessageReply
	6,  // 13: pb.xRaftServer.ping:output_type -> pb.MessageReply
	10, // [10:14] is the sub-list for method output_type
	6,  // [6:10] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_xraft_proto_init() }
func file_xraft_proto_init() {
	if File_xraft_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_xraft_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Command); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_xraft_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_xraft_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_xraft_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_xraft_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_xraft_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FBFCmd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_xraft_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_xraft_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AbortReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_xraft_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PingText); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_xraft_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_xraft_proto_goTypes,
		DependencyIndexes: file_xraft_proto_depIdxs,
		MessageInfos:      file_xraft_proto_msgTypes,
	}.Build()
	File_xraft_proto = out.File
	file_xraft_proto_rawDesc = nil
	file_xraft_proto_goTypes = nil
	file_xraft_proto_depIdxs = nil
}
